@page "/part2"
@rendermode InteractiveServer
<h3>Part2</h3>
<h3>Lifecycle Methods</h3>

<button @onclick="OnButtonClick">Click Me</button>
<p>@DateTime.Now.ToString()</p>

<p>Check the console for lifecycle method calls.</p>
<h3>Parameter value child :@Counter</h3>
<ul>
    @if(messages.Count == 0)
    {
        <li>No lifecycle messages yet.</li>
    }
   else {
    @foreach (var message in messages)
    {
        <li>@message</li>

    
    }
}
</ul>

@code {

    [Parameter]
    public int? Counter { get; set; }
    private List<string> messages = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        messages.Add("Child:OnInitialized called at " + DateTime.Now.ToString("HH:mm:ss.fff"));
        Console.WriteLine("Child:OnInitialized called" + DateTime.Now.ToString("HH:mm:ss.fff"));
    }

    protected override async Task OnParametersSetAsync()
    {
        messages.Add("Child:OnParametersSetAsync called at " + DateTime.Now.ToString("HH:mm:ss.fff"));
        Console.WriteLine("Child:OnParametersSetAsync called" + DateTime.Now.ToString("HH:mm:ss.fff"));
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            messages.Add("Child:OnAfterRender called at " + DateTime.Now.ToString());
            Console.WriteLine("Child:OnAfterRender called" + DateTime.Now.ToString());
        }
        else
          {
            messages.Add("Child:second time redering via button click at " + DateTime.Now.ToString());
            Console.WriteLine("Child:second time redering via button click" + DateTime.Now.ToString());
          }
    
    }

    private void OnButtonClick()
    {
        messages.Add("Button clicked at " + DateTime.Now.ToString());
        Console.WriteLine("Button clicked" + DateTime.Now.ToString());
    }
}